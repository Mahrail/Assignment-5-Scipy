import pandas as pd
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC
from sklearn.linear_model import LogisticRegression

# Load the dataset
data = load_breast_cancer()
X = pd.DataFrame(data.data, columns=data.feature_names)
y = pd.Series(data.target)

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize the features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Initialize models
models = {
    "Logistic Regression": LogisticRegression(max_iter=10000),
    "Support Vector Classifier": SVC(),
    "Random Forest": RandomForestClassifier()
}

# Train models and store their performance
results = {}
for model_name, model in models.items():
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    
    # Calculate performance metrics
    accuracy = accuracy_score(y_test, y_pred)
    results[model_name] = {
        "Accuracy": accuracy,
        "Classification Report": classification_report(y_test, y_pred),
        "Confusion Matrix": confusion_matrix(y_test, y_pred)
    }
 
 # Print results for each model
for model_name, metrics in results.items():
    print(f"Model: {model_name}")
    print(f"Accuracy: {metrics['Accuracy']:.2f}")
    print("Classification Report:\n", metrics['Classification Report'])
    print("Confusion Matrix:\n", metrics['Confusion Matrix'])
    print("-" * 40)

# Breast Cancer Classification Project

## Purpose
This project aims to use machine learning to predict breast cancer presence using the built-in breast cancer dataset from Scikit Learn. We evaluate the performance of various classification models.

## Class Design and Implementation
We implemented three models:
- **Logistic Regression**: A simple linear model for binary classification.
- **Support Vector Classifier (SVC)**: Effective for high-dimensional spaces.
- **Random Forest**: An ensemble model that combines multiple decision trees.

### Attributes
- `data`: Breast cancer dataset.
- `X`: Features (inputs).
- `y`: Target variable (output).
- `X_train`, `X_test`: Split datasets for training and testing.
- `y_train`, `y_test`: Corresponding target splits.
- `results`: Dictionary holding performance metrics for each model.

### Methods
- `fit()`: Trains the model on training data.
- `predict()`: Makes predictions on test data.
- `classification_report()`: Outputs precision, recall, and F1-score.
- `accuracy_score()`: Measures the accuracy of predictions.

## Limitations
The models may have varying performances based on the datasetâ€™s characteristics. Random Forest is computationally heavier compared to the others. This analysis focuses solely on this dataset and may not generalize to all breast cancer cases.

